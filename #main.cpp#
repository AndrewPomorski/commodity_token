
#include <cstdlib>
#include <iostream>

double getDollarExposure(double spotEntry, int noShares, double marginFactor);

int getSharesForTargetExposure(float targetExposure, float underlyingPrice, float marginFactor);

void printFlucts();

int main (int argc, char * argv[]) {
  int DEBUG = 1;
  
  float targetExposure = 1000000.00;
  float wtiIndexPrice = 118.28;
  float marginFactor = 0.05;
  int totalSupply = 1000000;
  
  int targetShares = getSharesForTargetExposure(targetExposure, wtiIndexPrice, marginFactor);
  double dollarExposure = getDollarExposure(wtiIndexPrice, targetShares, marginFactor);
  double notionalExposure = dollarExposure / marginFactor;
  double notionalTokenValue  = dollarExposure / totalSupply;

  if (DEBUG) {
    printFlucts();
  } else {
    printf("index price: %f\n", wtiIndexPrice);
    printf("target shares: %d\n", targetShares);
    printf("dollar exposure: %f\n", dollarExposure);
    printf("notional exposure: %f\n", dollarExposure / marginFactor);
    printf("notional token value: %f\n", notionalTokenValue);
  }
  return 0;
}

double getDollarExposure(double spotEntry, int noShares, double marginFactor) {
  return spotEntry * noShares * marginFactor;
}

int getSharesForTargetExposure(float targetExposure, float underlyingPrice, float marginFactor) {
  return (int) (targetExposure / underlyingPrice);
}

void printFlucts() {
  
  for (int i = 0; i < 100; i++) {
    printf("%f\n", (double) rand() / RAND_MAX);
  }
}
